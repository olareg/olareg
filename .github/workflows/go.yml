name: Go

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gover: ["1.20", "1.21", "1.22"]

    env:
      RELEASE_GO_VER: "1.22"
      # do not automatically upgrade go to a different version: https://go.dev/doc/toolchain
      GOTOOLCHAIN: "local"

    permissions:
      contents: write # needed for pushing release with softprops/actions-gh-release
      id-token: write # needed for OIDC Token signing with cosign

    steps:
    - name: Check out code
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

    - name: "Set up Go ${{ matrix.gover }}"
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: "${{ matrix.gover }}"
        check-latest: true
      id: go

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Verify go fmt
      run: test -z "$(go fmt ./...)"

    - name: Verify go vet
      run: test -z "$(go vet ./...)"

    - name: Test
      run: make test

    - name: Linting
      if: matrix.gover == env.RELEASE_GO_VER
      run: make lint

    - name: Install syft
      if: startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main'
      uses: anchore/sbom-action/download-syft@9fece9e20048ca9590af301449208b2b8861333b # v0.15.9
      id: syft
      with:
        syft-version: "v1.0.1"

    - name: Build artifacts
      if: startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main'
      run: make artifacts

    - name: Install cosign
      if: ( startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main' ) && matrix.gover == env.RELEASE_GO_VER
      uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0
      with:
        cosign-release: "v2.2.3"

    - name: Sign artifacts
      if: ( startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main' ) && matrix.gover == env.RELEASE_GO_VER
      run: |
        cd artifacts
        for artifact in \
            olareg-darwin-amd64 \
            olareg-darwin-arm64 \
            olareg-linux-amd64 \
            olareg-linux-arm64 \
            olareg-linux-ppc64le \
            olareg-linux-s390x \
            olareg-windows-amd64.exe \
          ; do
          cosign sign-blob -y --output-signature "${artifact%.exe}.sig" --output-certificate "${artifact%.exe}.pem" "${artifact}"
        done

    - name: Gather release details
      if: startsWith( github.ref, 'refs/tags/v' ) && github.repository_owner == 'olareg' && matrix.gover == env.RELEASE_GO_VER
      id: release_details
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        VALID_RELEASE=false
        if [ -f "release.md" ] && grep -q "Release $VERSION" release.md; then
          VALID_RELEASE=true
        fi
        RELEASE_NOTES=$(cat release.md || echo release notes unavailable)
        # escape % and linefeeds
        RELEASE_NOTES="${RELEASE_NOTES//'%'/'%25'}"
        RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
        RELEASE_NOTES="${RELEASE_NOTES//$'\r'/'%0D'}"
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=valid::${VALID_RELEASE}
        echo ::set-output name=release_notes::${RELEASE_NOTES}

    - name: Create release
      if: steps.release_details.outputs.valid == 'true' && matrix.gover == env.RELEASE_GO_VER
      id: release_create
      uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564 # v2.0.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_details.outputs.version }}
        body: ${{ steps.release_details.outputs.release_notes }}
        draft: false
        prerelease: false
        files: ./artifacts/*

    - name: Save artifacts
      if: github.ref == 'refs/heads/main' && matrix.gover == env.RELEASE_GO_VER
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: binaries
        path: ./artifacts/
        retention-days: 30
