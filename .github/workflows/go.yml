name: Go

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gover: ["1.23", "1.24"]

    env:
      RELEASE_GO_VER: "1.24"
      # do not automatically upgrade go to a different version: https://go.dev/doc/toolchain
      GOTOOLCHAIN: "local"

    permissions:
      contents: write # needed for pushing release with softprops/actions-gh-release
      id-token: write # needed for OIDC Token signing with cosign

    steps:
    - name: Check out code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: "Set up Go ${{ matrix.gover }}"
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: "${{ matrix.gover }}"
        check-latest: true
      id: go

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Verify go fmt
      run: test -z "$(go fmt ./...)"

    - name: Verify go vet
      run: test -z "$(go vet ./...)"

    - name: Test
      run: make test

    - name: Linting
      if: matrix.gover == env.RELEASE_GO_VER
      run: make lint

    - name: Install syft
      if: startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main'
      uses: anchore/sbom-action/download-syft@cee1b8e05ae5b2593a75e197229729eabaa9f8ec # v0.20.2
      id: syft
      with:
        syft-version: "v1.28.0"

    - name: Build artifacts
      if: startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main'
      run: make artifacts

    - name: Install cosign
      if: ( startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main' ) && matrix.gover == env.RELEASE_GO_VER
      uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
      with:
        cosign-release: "v2.5.3"

    - name: Sign artifacts
      if: ( startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/heads/main' ) && matrix.gover == env.RELEASE_GO_VER
      run: |
        cd artifacts
        for artifact in \
            olareg-darwin-amd64 \
            olareg-darwin-arm64 \
            olareg-linux-amd64 \
            olareg-linux-arm64 \
            olareg-linux-ppc64le \
            olareg-linux-s390x \
            olareg-windows-amd64.exe \
          ; do
          cosign sign-blob -y --output-signature "${artifact%.exe}.sig" --output-certificate "${artifact%.exe}.pem" "${artifact}"
        done

    - name: Gather release details
      if: startsWith( github.ref, 'refs/tags/v' ) && github.repository_owner == 'olareg' && matrix.gover == env.RELEASE_GO_VER
      id: release_details
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        VALID_RELEASE=false
        if [ -f "release.md" ] && grep -q "Release $VERSION" release.md; then
          VALID_RELEASE=true
        fi
        echo "valid=${VALID_RELEASE}" >>$GITHUB_OUTPUT
        echo "version=${VERSION}" >>$GITHUB_OUTPUT

    - name: Create release
      if: steps.release_details.outputs.valid == 'true' && matrix.gover == env.RELEASE_GO_VER
      id: release_create
      uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_details.outputs.version }}
        body_path: release.md
        draft: false
        prerelease: false
        files: ./artifacts/*

    - name: Save artifacts
      if: github.ref == 'refs/heads/main' && matrix.gover == env.RELEASE_GO_VER
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: binaries
        path: ./artifacts/
        retention-days: 30
